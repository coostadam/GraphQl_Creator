{"ast":null,"code":"import{buildSchema,isObjectType,isScalarType,isEnumType,isNonNullType,isListType}from'graphql';import React,{useState,useMemo}from'react';// Helper para \"desenvolver\" tipos no null o listas y obtener el tipo base\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function unwrapType(type){if(isNonNullType(type)||isListType(type)){return unwrapType(type.ofType);}return type;}// Componente recursivo para renderizar los campos con checkboxes\nfunction FieldSelector(_ref){let{schema,type,path,selectedFields,setSelectedFields}=_ref;if(!isObjectType(type))return null;const fields=type.getFields();const toggleField=fieldName=>{const fullPath=[...path,fieldName].join('.');setSelectedFields(prev=>{const newSet=new Set(prev);if(newSet.has(fullPath)){// Si ya estaba seleccionado y se desmarca, quitarlo y todos los descendientes\nfor(const selected of newSet){if(selected===fullPath||selected.startsWith(fullPath+'.')){newSet.delete(selected);}}}else{// Si se marca, simplemente añadirlo\nnewSet.add(fullPath);}return newSet;});};return/*#__PURE__*/_jsx(\"ul\",{style:{listStyle:'none',paddingLeft:'1em',borderLeft:'1px solid #ccc'},children:Object.values(fields).map(field=>{const fieldType=unwrapType(field.type);const fullPath=[...path,field.name].join('.');const isSelected=selectedFields.has(fullPath);return/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:isSelected,onChange:()=>toggleField(field.name)}),field.name,\" (\",fieldType.name||fieldType.toString(),\")\"]}),isSelected&&isObjectType(fieldType)&&/*#__PURE__*/_jsx(FieldSelector,{schema:schema,type:fieldType,path:[...path,field.name],selectedFields:selectedFields,setSelectedFields:setSelectedFields})]},fullPath);})});}// Generar query a partir de selecciónfunction\nfunction buildFieldTree(paths){const tree={};paths.forEach(path=>{const parts=path.split('.');let current=tree;for(const part of parts){if(!current[part]){current[part]={};}current=current[part];}});return tree;}function renderFieldTree(tree,type,schema){let indent=arguments.length>3&&arguments[3]!==undefined?arguments[3]:'  ';if(!isObjectType(type))return'';const fields=type.getFields();return Object.entries(tree).map(_ref2=>{let[fieldName,subTree]=_ref2;const field=fields[fieldName];if(!field)return'';const fieldType=unwrapType(field.type);if(Object.keys(subTree).length>0&&isObjectType(fieldType)){return`${indent}${fieldName} {\\n${renderFieldTree(subTree,fieldType,schema,indent+'  ')}\\n${indent}}`;}else{return`${indent}${fieldName}`;}}).join('\\n');}function generateQuery(schema,selectedFields){const queryType=schema.getQueryType();if(!queryType)return'';const fieldTree=buildFieldTree([...selectedFields]);const body=renderFieldTree(fieldTree,queryType,schema);return`query {\\n${body}\\n}`;}export default function GraphQLCheckboxBuilder(){const[schemaSDL,setSchemaSDL]=useState('');const[selectedFields,setSelectedFields]=useState(new Set());const[error,setError]=useState(null);const[copySuccess,setCopySuccess]=useState('');const[fileName,setFileName]=useState('query.graphql');const schema=useMemo(()=>{if(!schemaSDL.trim()){setError(null);setSelectedFields(new Set());return null;}try{const parsedSchema=buildSchema(schemaSDL);setError(null);return parsedSchema;}catch(e){setError(e.message);return null;}},[schemaSDL]);const query=schema?generateQuery(schema,selectedFields):'';const handleCopy=()=>{if(!query)return;navigator.clipboard.writeText(query).then(()=>{setCopySuccess('Query copiada al portapapeles!');setTimeout(()=>setCopySuccess(''),2000);}).catch(()=>setCopySuccess('Error copiando la query'));};function handleExport(){if(!schema)return;if(!fileName.trim()){alert('Por favor, escribe un nombre válido para el archivo.');return;}let exportFileName=fileName.trim();// Añadir extensión .graphql si no la tiene\nif(!exportFileName.endsWith('.graphql')){exportFileName+='.graphql';}const query=generateQuery(schema,selectedFields);const blob=new Blob([query],{type:'text/plain'});const url=URL.createObjectURL(blob);const link=document.createElement('a');link.href=url;link.download=exportFileName;document.body.appendChild(link);link.click();document.body.removeChild(link);URL.revokeObjectURL(url);}return/*#__PURE__*/_jsxs(\"div\",{style:{fontFamily:'monospace',fontSize:14,maxWidth:700,margin:'auto'},children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Introduce el esquema GraphQL (SDL)\"}),/*#__PURE__*/_jsx(\"textarea\",{placeholder:\"Pega tu esquema GraphQL aqu\\xED...\",value:schemaSDL,onChange:e=>setSchemaSDL(e.target.value),rows:15,style:{width:'100%',fontFamily:'monospace',fontSize:14}}),error&&/*#__PURE__*/_jsxs(\"div\",{style:{color:'red'},children:[\"Error en el esquema: \",error]}),schema?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Selecciona campos para tu Query\"}),/*#__PURE__*/_jsx(FieldSelector,{schema:schema,type:schema.getQueryType(),path:[],selectedFields:selectedFields,setSelectedFields:setSelectedFields}),/*#__PURE__*/_jsx(\"h3\",{children:\"Query generada\"}),/*#__PURE__*/_jsx(\"pre\",{children:query}),/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:'10px',display:'flex',gap:'10px'},children:[/*#__PURE__*/_jsx(\"button\",{onClick:handleCopy,children:\"Copiar query\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setSelectedFields(new Set()),children:\"Limpiar selecci\\xF3n\"})]}),/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:'10px'},children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"Nombre del archivo:\",' ',/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:fileName,onChange:e=>setFileName(e.target.value),style:{fontFamily:'monospace',fontSize:14,width:200},placeholder:\"nombre.graphql\"})]}),/*#__PURE__*/_jsx(\"button\",{onClick:handleExport,style:{marginLeft:'10px'},children:\"Exportar query\"})]}),copySuccess&&/*#__PURE__*/_jsx(\"div\",{style:{color:'green',marginTop:'5px'},children:copySuccess})]}):!error&&/*#__PURE__*/_jsx(\"div\",{style:{color:'#555'},children:\"Introduce un esquema GraphQL v\\xE1lido para comenzar\"})]});}","map":{"version":3,"names":["buildSchema","isObjectType","isScalarType","isEnumType","isNonNullType","isListType","React","useState","useMemo","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","unwrapType","type","ofType","FieldSelector","_ref","schema","path","selectedFields","setSelectedFields","fields","getFields","toggleField","fieldName","fullPath","join","prev","newSet","Set","has","selected","startsWith","delete","add","style","listStyle","paddingLeft","borderLeft","children","Object","values","map","field","fieldType","name","isSelected","checked","onChange","toString","buildFieldTree","paths","tree","forEach","parts","split","current","part","renderFieldTree","indent","arguments","length","undefined","entries","_ref2","subTree","keys","generateQuery","queryType","getQueryType","fieldTree","body","GraphQLCheckboxBuilder","schemaSDL","setSchemaSDL","error","setError","copySuccess","setCopySuccess","fileName","setFileName","trim","parsedSchema","e","message","query","handleCopy","navigator","clipboard","writeText","then","setTimeout","catch","handleExport","alert","exportFileName","endsWith","blob","Blob","url","URL","createObjectURL","link","document","createElement","href","download","appendChild","click","removeChild","revokeObjectURL","fontFamily","fontSize","maxWidth","margin","placeholder","value","target","rows","width","color","marginTop","display","gap","onClick","marginLeft"],"sources":["C:/Users/acosta_iteggo/graphql-checkbox-builder/src/App.js"],"sourcesContent":["import { buildSchema, isObjectType, isScalarType, isEnumType, isNonNullType, isListType } from 'graphql';\nimport React, { useState, useMemo } from 'react';\n\n// Helper para \"desenvolver\" tipos no null o listas y obtener el tipo base\nfunction unwrapType(type) {\n  if (isNonNullType(type) || isListType(type)) {\n    return unwrapType(type.ofType);\n  }\n  return type;\n}\n\n// Componente recursivo para renderizar los campos con checkboxes\nfunction FieldSelector({ schema, type, path, selectedFields, setSelectedFields }) {\n  if (!isObjectType(type)) return null;\n\n  const fields = type.getFields();\n\n  const toggleField = (fieldName) => {\n    const fullPath = [...path, fieldName].join('.');\n    setSelectedFields((prev) => {\n      const newSet = new Set(prev);\n      if (newSet.has(fullPath)) {\n        // Si ya estaba seleccionado y se desmarca, quitarlo y todos los descendientes\n        for (const selected of newSet) {\n          if (selected === fullPath || selected.startsWith(fullPath + '.')) {\n            newSet.delete(selected);\n          }\n        }\n      } else {\n        // Si se marca, simplemente añadirlo\n        newSet.add(fullPath);\n      }\n      return newSet;\n    });\n  };\n\n  return (\n    <ul style={{ listStyle: 'none', paddingLeft: '1em', borderLeft: '1px solid #ccc' }}>\n      {Object.values(fields).map((field) => {\n        const fieldType = unwrapType(field.type);\n        const fullPath = [...path, field.name].join('.');\n        const isSelected = selectedFields.has(fullPath);\n\n        return (\n          <li key={fullPath}>\n            <label>\n              <input\n                type=\"checkbox\"\n                checked={isSelected}\n                onChange={() => toggleField(field.name)}\n              />\n              {field.name} ({fieldType.name || fieldType.toString()})\n            </label>\n            {/* Renderizar subcampos si es objeto y seleccionado */}\n            {isSelected && isObjectType(fieldType) && (\n              <FieldSelector\n                schema={schema}\n                type={fieldType}\n                path={[...path, field.name]}\n                selectedFields={selectedFields}\n                setSelectedFields={setSelectedFields}\n              />\n            )}\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n\n// Generar query a partir de selecciónfunction\nfunction buildFieldTree(paths) {\n  const tree = {};\n  paths.forEach((path) => {\n    const parts = path.split('.');\n    let current = tree;\n    for (const part of parts) {\n      if (!current[part]) {\n        current[part] = {};\n      }\n      current = current[part];\n    }\n  });\n  return tree;\n}\n\nfunction renderFieldTree(tree, type, schema, indent = '  ') {\n  if (!isObjectType(type)) return '';\n\n  const fields = type.getFields();\n  return Object.entries(tree)\n    .map(([fieldName, subTree]) => {\n      const field = fields[fieldName];\n      if (!field) return '';\n      const fieldType = unwrapType(field.type);\n      if (Object.keys(subTree).length > 0 && isObjectType(fieldType)) {\n        return `${indent}${fieldName} {\\n${renderFieldTree(subTree, fieldType, schema, indent + '  ')}\\n${indent}}`;\n      } else {\n        return `${indent}${fieldName}`;\n      }\n    })\n    .join('\\n');\n}\n\nfunction generateQuery(schema, selectedFields) {\n  const queryType = schema.getQueryType();\n  if (!queryType) return '';\n\n  const fieldTree = buildFieldTree([...selectedFields]);\n  const body = renderFieldTree(fieldTree, queryType, schema);\n  return `query {\\n${body}\\n}`;\n}\n\nexport default function GraphQLCheckboxBuilder() {\n  const [schemaSDL, setSchemaSDL] = useState('');\n  const [selectedFields, setSelectedFields] = useState(new Set());\n  const [error, setError] = useState(null);\n  const [copySuccess, setCopySuccess] = useState('');\n  const [fileName, setFileName] = useState('query.graphql');\n\n  const schema = useMemo(() => {\n    if (!schemaSDL.trim()) {\n      setError(null);\n      setSelectedFields(new Set());\n      return null;\n    }\n    try {\n      const parsedSchema = buildSchema(schemaSDL);\n      setError(null);\n      return parsedSchema;\n    } catch (e) {\n      setError(e.message);\n      return null;\n    }\n  }, [schemaSDL]);\n\n  const query = schema ? generateQuery(schema, selectedFields) : '';\n\n  const handleCopy = () => {\n    if (!query) return;\n    navigator.clipboard.writeText(query)\n      .then(() => {\n        setCopySuccess('Query copiada al portapapeles!');\n        setTimeout(() => setCopySuccess(''), 2000);\n      })\n      .catch(() => setCopySuccess('Error copiando la query'));\n  };\n\n  function handleExport() {\n    if (!schema) return;\n    if (!fileName.trim()) {\n      alert('Por favor, escribe un nombre válido para el archivo.');\n      return;\n    }\n\n    let exportFileName = fileName.trim();\n    // Añadir extensión .graphql si no la tiene\n    if (!exportFileName.endsWith('.graphql')) {\n      exportFileName += '.graphql';\n    }\n\n    const query = generateQuery(schema, selectedFields);\n    const blob = new Blob([query], { type: 'text/plain' });\n    const url = URL.createObjectURL(blob);\n\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = exportFileName;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    URL.revokeObjectURL(url);\n  }\n\n  return (\n    <div style={{ fontFamily: 'monospace', fontSize: 14, maxWidth: 700, margin: 'auto' }}>\n      <h3>Introduce el esquema GraphQL (SDL)</h3>\n      <textarea\n        placeholder=\"Pega tu esquema GraphQL aquí...\"\n        value={schemaSDL}\n        onChange={(e) => setSchemaSDL(e.target.value)}\n        rows={15}\n        style={{ width: '100%', fontFamily: 'monospace', fontSize: 14 }}\n      />\n      {error && <div style={{ color: 'red' }}>Error en el esquema: {error}</div>}\n\n      {schema ? (\n        <>\n          <h3>Selecciona campos para tu Query</h3>\n          <FieldSelector\n            schema={schema}\n            type={schema.getQueryType()}\n            path={[]}\n            selectedFields={selectedFields}\n            setSelectedFields={setSelectedFields}\n          />\n          <h3>Query generada</h3>\n          <pre>{query}</pre>\n          <div style={{ marginTop: '10px', display: 'flex', gap: '10px' }}>\n            <button onClick={handleCopy}>\n              Copiar query\n            </button>\n\n            <button onClick={() => setSelectedFields(new Set())}>\n              Limpiar selección\n            </button>\n          </div>\n\n          <div style={{ marginTop: '10px' }}>\n            <label>\n              Nombre del archivo:{' '}\n              <input\n                type=\"text\"\n                value={fileName}\n                onChange={(e) => setFileName(e.target.value)}\n                style={{ fontFamily: 'monospace', fontSize: 14, width: 200 }}\n                placeholder=\"nombre.graphql\"\n              />\n            </label>\n            <button onClick={handleExport} style={{ marginLeft: '10px' }}>\n              Exportar query\n            </button>\n          </div>\n          {copySuccess && <div style={{ color: 'green', marginTop: '5px' }}>{copySuccess}</div>}\n        </>\n      ) : (\n        !error && <div style={{ color: '#555' }}>Introduce un esquema GraphQL válido para comenzar</div>\n      )}\n    </div>\n  );\n}"],"mappings":"AAAA,OAASA,WAAW,CAAEC,YAAY,CAAEC,YAAY,CAAEC,UAAU,CAAEC,aAAa,CAAEC,UAAU,KAAQ,SAAS,CACxG,MAAO,CAAAC,KAAK,EAAIC,QAAQ,CAAEC,OAAO,KAAQ,OAAO,CAEhD;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,CAAAC,QAAA,IAAAC,SAAA,yBACA,QAAS,CAAAC,UAAUA,CAACC,IAAI,CAAE,CACxB,GAAIZ,aAAa,CAACY,IAAI,CAAC,EAAIX,UAAU,CAACW,IAAI,CAAC,CAAE,CAC3C,MAAO,CAAAD,UAAU,CAACC,IAAI,CAACC,MAAM,CAAC,CAChC,CACA,MAAO,CAAAD,IAAI,CACb,CAEA;AACA,QAAS,CAAAE,aAAaA,CAAAC,IAAA,CAA4D,IAA3D,CAAEC,MAAM,CAAEJ,IAAI,CAAEK,IAAI,CAAEC,cAAc,CAAEC,iBAAkB,CAAC,CAAAJ,IAAA,CAC9E,GAAI,CAAClB,YAAY,CAACe,IAAI,CAAC,CAAE,MAAO,KAAI,CAEpC,KAAM,CAAAQ,MAAM,CAAGR,IAAI,CAACS,SAAS,CAAC,CAAC,CAE/B,KAAM,CAAAC,WAAW,CAAIC,SAAS,EAAK,CACjC,KAAM,CAAAC,QAAQ,CAAG,CAAC,GAAGP,IAAI,CAAEM,SAAS,CAAC,CAACE,IAAI,CAAC,GAAG,CAAC,CAC/CN,iBAAiB,CAAEO,IAAI,EAAK,CAC1B,KAAM,CAAAC,MAAM,CAAG,GAAI,CAAAC,GAAG,CAACF,IAAI,CAAC,CAC5B,GAAIC,MAAM,CAACE,GAAG,CAACL,QAAQ,CAAC,CAAE,CACxB;AACA,IAAK,KAAM,CAAAM,QAAQ,GAAI,CAAAH,MAAM,CAAE,CAC7B,GAAIG,QAAQ,GAAKN,QAAQ,EAAIM,QAAQ,CAACC,UAAU,CAACP,QAAQ,CAAG,GAAG,CAAC,CAAE,CAChEG,MAAM,CAACK,MAAM,CAACF,QAAQ,CAAC,CACzB,CACF,CACF,CAAC,IAAM,CACL;AACAH,MAAM,CAACM,GAAG,CAACT,QAAQ,CAAC,CACtB,CACA,MAAO,CAAAG,MAAM,CACf,CAAC,CAAC,CACJ,CAAC,CAED,mBACErB,IAAA,OAAI4B,KAAK,CAAE,CAAEC,SAAS,CAAE,MAAM,CAAEC,WAAW,CAAE,KAAK,CAAEC,UAAU,CAAE,gBAAiB,CAAE,CAAAC,QAAA,CAChFC,MAAM,CAACC,MAAM,CAACpB,MAAM,CAAC,CAACqB,GAAG,CAAEC,KAAK,EAAK,CACpC,KAAM,CAAAC,SAAS,CAAGhC,UAAU,CAAC+B,KAAK,CAAC9B,IAAI,CAAC,CACxC,KAAM,CAAAY,QAAQ,CAAG,CAAC,GAAGP,IAAI,CAAEyB,KAAK,CAACE,IAAI,CAAC,CAACnB,IAAI,CAAC,GAAG,CAAC,CAChD,KAAM,CAAAoB,UAAU,CAAG3B,cAAc,CAACW,GAAG,CAACL,QAAQ,CAAC,CAE/C,mBACEhB,KAAA,OAAA8B,QAAA,eACE9B,KAAA,UAAA8B,QAAA,eACEhC,IAAA,UACEM,IAAI,CAAC,UAAU,CACfkC,OAAO,CAAED,UAAW,CACpBE,QAAQ,CAAEA,CAAA,GAAMzB,WAAW,CAACoB,KAAK,CAACE,IAAI,CAAE,CACzC,CAAC,CACDF,KAAK,CAACE,IAAI,CAAC,IAAE,CAACD,SAAS,CAACC,IAAI,EAAID,SAAS,CAACK,QAAQ,CAAC,CAAC,CAAC,GACxD,EAAO,CAAC,CAEPH,UAAU,EAAIhD,YAAY,CAAC8C,SAAS,CAAC,eACpCrC,IAAA,CAACQ,aAAa,EACZE,MAAM,CAAEA,MAAO,CACfJ,IAAI,CAAE+B,SAAU,CAChB1B,IAAI,CAAE,CAAC,GAAGA,IAAI,CAAEyB,KAAK,CAACE,IAAI,CAAE,CAC5B1B,cAAc,CAAEA,cAAe,CAC/BC,iBAAiB,CAAEA,iBAAkB,CACtC,CACF,GAlBMK,QAmBL,CAAC,CAET,CAAC,CAAC,CACA,CAAC,CAET,CAEA;AACA,QAAS,CAAAyB,cAAcA,CAACC,KAAK,CAAE,CAC7B,KAAM,CAAAC,IAAI,CAAG,CAAC,CAAC,CACfD,KAAK,CAACE,OAAO,CAAEnC,IAAI,EAAK,CACtB,KAAM,CAAAoC,KAAK,CAAGpC,IAAI,CAACqC,KAAK,CAAC,GAAG,CAAC,CAC7B,GAAI,CAAAC,OAAO,CAAGJ,IAAI,CAClB,IAAK,KAAM,CAAAK,IAAI,GAAI,CAAAH,KAAK,CAAE,CACxB,GAAI,CAACE,OAAO,CAACC,IAAI,CAAC,CAAE,CAClBD,OAAO,CAACC,IAAI,CAAC,CAAG,CAAC,CAAC,CACpB,CACAD,OAAO,CAAGA,OAAO,CAACC,IAAI,CAAC,CACzB,CACF,CAAC,CAAC,CACF,MAAO,CAAAL,IAAI,CACb,CAEA,QAAS,CAAAM,eAAeA,CAACN,IAAI,CAAEvC,IAAI,CAAEI,MAAM,CAAiB,IAAf,CAAA0C,MAAM,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,IAAI,CACxD,GAAI,CAAC9D,YAAY,CAACe,IAAI,CAAC,CAAE,MAAO,EAAE,CAElC,KAAM,CAAAQ,MAAM,CAAGR,IAAI,CAACS,SAAS,CAAC,CAAC,CAC/B,MAAO,CAAAkB,MAAM,CAACuB,OAAO,CAACX,IAAI,CAAC,CACxBV,GAAG,CAACsB,KAAA,EAA0B,IAAzB,CAACxC,SAAS,CAAEyC,OAAO,CAAC,CAAAD,KAAA,CACxB,KAAM,CAAArB,KAAK,CAAGtB,MAAM,CAACG,SAAS,CAAC,CAC/B,GAAI,CAACmB,KAAK,CAAE,MAAO,EAAE,CACrB,KAAM,CAAAC,SAAS,CAAGhC,UAAU,CAAC+B,KAAK,CAAC9B,IAAI,CAAC,CACxC,GAAI2B,MAAM,CAAC0B,IAAI,CAACD,OAAO,CAAC,CAACJ,MAAM,CAAG,CAAC,EAAI/D,YAAY,CAAC8C,SAAS,CAAC,CAAE,CAC9D,MAAO,GAAGe,MAAM,GAAGnC,SAAS,OAAOkC,eAAe,CAACO,OAAO,CAAErB,SAAS,CAAE3B,MAAM,CAAE0C,MAAM,CAAG,IAAI,CAAC,KAAKA,MAAM,GAAG,CAC7G,CAAC,IAAM,CACL,MAAO,GAAGA,MAAM,GAAGnC,SAAS,EAAE,CAChC,CACF,CAAC,CAAC,CACDE,IAAI,CAAC,IAAI,CAAC,CACf,CAEA,QAAS,CAAAyC,aAAaA,CAAClD,MAAM,CAAEE,cAAc,CAAE,CAC7C,KAAM,CAAAiD,SAAS,CAAGnD,MAAM,CAACoD,YAAY,CAAC,CAAC,CACvC,GAAI,CAACD,SAAS,CAAE,MAAO,EAAE,CAEzB,KAAM,CAAAE,SAAS,CAAGpB,cAAc,CAAC,CAAC,GAAG/B,cAAc,CAAC,CAAC,CACrD,KAAM,CAAAoD,IAAI,CAAGb,eAAe,CAACY,SAAS,CAAEF,SAAS,CAAEnD,MAAM,CAAC,CAC1D,MAAO,YAAYsD,IAAI,KAAK,CAC9B,CAEA,cAAe,SAAS,CAAAC,sBAAsBA,CAAA,CAAG,CAC/C,KAAM,CAACC,SAAS,CAAEC,YAAY,CAAC,CAAGtE,QAAQ,CAAC,EAAE,CAAC,CAC9C,KAAM,CAACe,cAAc,CAAEC,iBAAiB,CAAC,CAAGhB,QAAQ,CAAC,GAAI,CAAAyB,GAAG,CAAC,CAAC,CAAC,CAC/D,KAAM,CAAC8C,KAAK,CAAEC,QAAQ,CAAC,CAAGxE,QAAQ,CAAC,IAAI,CAAC,CACxC,KAAM,CAACyE,WAAW,CAAEC,cAAc,CAAC,CAAG1E,QAAQ,CAAC,EAAE,CAAC,CAClD,KAAM,CAAC2E,QAAQ,CAAEC,WAAW,CAAC,CAAG5E,QAAQ,CAAC,eAAe,CAAC,CAEzD,KAAM,CAAAa,MAAM,CAAGZ,OAAO,CAAC,IAAM,CAC3B,GAAI,CAACoE,SAAS,CAACQ,IAAI,CAAC,CAAC,CAAE,CACrBL,QAAQ,CAAC,IAAI,CAAC,CACdxD,iBAAiB,CAAC,GAAI,CAAAS,GAAG,CAAC,CAAC,CAAC,CAC5B,MAAO,KAAI,CACb,CACA,GAAI,CACF,KAAM,CAAAqD,YAAY,CAAGrF,WAAW,CAAC4E,SAAS,CAAC,CAC3CG,QAAQ,CAAC,IAAI,CAAC,CACd,MAAO,CAAAM,YAAY,CACrB,CAAE,MAAOC,CAAC,CAAE,CACVP,QAAQ,CAACO,CAAC,CAACC,OAAO,CAAC,CACnB,MAAO,KAAI,CACb,CACF,CAAC,CAAE,CAACX,SAAS,CAAC,CAAC,CAEf,KAAM,CAAAY,KAAK,CAAGpE,MAAM,CAAGkD,aAAa,CAAClD,MAAM,CAAEE,cAAc,CAAC,CAAG,EAAE,CAEjE,KAAM,CAAAmE,UAAU,CAAGA,CAAA,GAAM,CACvB,GAAI,CAACD,KAAK,CAAE,OACZE,SAAS,CAACC,SAAS,CAACC,SAAS,CAACJ,KAAK,CAAC,CACjCK,IAAI,CAAC,IAAM,CACVZ,cAAc,CAAC,gCAAgC,CAAC,CAChDa,UAAU,CAAC,IAAMb,cAAc,CAAC,EAAE,CAAC,CAAE,IAAI,CAAC,CAC5C,CAAC,CAAC,CACDc,KAAK,CAAC,IAAMd,cAAc,CAAC,yBAAyB,CAAC,CAAC,CAC3D,CAAC,CAED,QAAS,CAAAe,YAAYA,CAAA,CAAG,CACtB,GAAI,CAAC5E,MAAM,CAAE,OACb,GAAI,CAAC8D,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAE,CACpBa,KAAK,CAAC,sDAAsD,CAAC,CAC7D,OACF,CAEA,GAAI,CAAAC,cAAc,CAAGhB,QAAQ,CAACE,IAAI,CAAC,CAAC,CACpC;AACA,GAAI,CAACc,cAAc,CAACC,QAAQ,CAAC,UAAU,CAAC,CAAE,CACxCD,cAAc,EAAI,UAAU,CAC9B,CAEA,KAAM,CAAAV,KAAK,CAAGlB,aAAa,CAAClD,MAAM,CAAEE,cAAc,CAAC,CACnD,KAAM,CAAA8E,IAAI,CAAG,GAAI,CAAAC,IAAI,CAAC,CAACb,KAAK,CAAC,CAAE,CAAExE,IAAI,CAAE,YAAa,CAAC,CAAC,CACtD,KAAM,CAAAsF,GAAG,CAAGC,GAAG,CAACC,eAAe,CAACJ,IAAI,CAAC,CAErC,KAAM,CAAAK,IAAI,CAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC,CACxCF,IAAI,CAACG,IAAI,CAAGN,GAAG,CACfG,IAAI,CAACI,QAAQ,CAAGX,cAAc,CAC9BQ,QAAQ,CAAChC,IAAI,CAACoC,WAAW,CAACL,IAAI,CAAC,CAC/BA,IAAI,CAACM,KAAK,CAAC,CAAC,CACZL,QAAQ,CAAChC,IAAI,CAACsC,WAAW,CAACP,IAAI,CAAC,CAC/BF,GAAG,CAACU,eAAe,CAACX,GAAG,CAAC,CAC1B,CAEA,mBACE1F,KAAA,QAAK0B,KAAK,CAAE,CAAE4E,UAAU,CAAE,WAAW,CAAEC,QAAQ,CAAE,EAAE,CAAEC,QAAQ,CAAE,GAAG,CAAEC,MAAM,CAAE,MAAO,CAAE,CAAA3E,QAAA,eACnFhC,IAAA,OAAAgC,QAAA,CAAI,oCAAkC,CAAI,CAAC,cAC3ChC,IAAA,aACE4G,WAAW,CAAC,oCAAiC,CAC7CC,KAAK,CAAE3C,SAAU,CACjBzB,QAAQ,CAAGmC,CAAC,EAAKT,YAAY,CAACS,CAAC,CAACkC,MAAM,CAACD,KAAK,CAAE,CAC9CE,IAAI,CAAE,EAAG,CACTnF,KAAK,CAAE,CAAEoF,KAAK,CAAE,MAAM,CAAER,UAAU,CAAE,WAAW,CAAEC,QAAQ,CAAE,EAAG,CAAE,CACjE,CAAC,CACDrC,KAAK,eAAIlE,KAAA,QAAK0B,KAAK,CAAE,CAAEqF,KAAK,CAAE,KAAM,CAAE,CAAAjF,QAAA,EAAC,uBAAqB,CAACoC,KAAK,EAAM,CAAC,CAEzE1D,MAAM,cACLR,KAAA,CAAAE,SAAA,EAAA4B,QAAA,eACEhC,IAAA,OAAAgC,QAAA,CAAI,iCAA+B,CAAI,CAAC,cACxChC,IAAA,CAACQ,aAAa,EACZE,MAAM,CAAEA,MAAO,CACfJ,IAAI,CAAEI,MAAM,CAACoD,YAAY,CAAC,CAAE,CAC5BnD,IAAI,CAAE,EAAG,CACTC,cAAc,CAAEA,cAAe,CAC/BC,iBAAiB,CAAEA,iBAAkB,CACtC,CAAC,cACFb,IAAA,OAAAgC,QAAA,CAAI,gBAAc,CAAI,CAAC,cACvBhC,IAAA,QAAAgC,QAAA,CAAM8C,KAAK,CAAM,CAAC,cAClB5E,KAAA,QAAK0B,KAAK,CAAE,CAAEsF,SAAS,CAAE,MAAM,CAAEC,OAAO,CAAE,MAAM,CAAEC,GAAG,CAAE,MAAO,CAAE,CAAApF,QAAA,eAC9DhC,IAAA,WAAQqH,OAAO,CAAEtC,UAAW,CAAA/C,QAAA,CAAC,cAE7B,CAAQ,CAAC,cAEThC,IAAA,WAAQqH,OAAO,CAAEA,CAAA,GAAMxG,iBAAiB,CAAC,GAAI,CAAAS,GAAG,CAAC,CAAC,CAAE,CAAAU,QAAA,CAAC,sBAErD,CAAQ,CAAC,EACN,CAAC,cAEN9B,KAAA,QAAK0B,KAAK,CAAE,CAAEsF,SAAS,CAAE,MAAO,CAAE,CAAAlF,QAAA,eAChC9B,KAAA,UAAA8B,QAAA,EAAO,qBACc,CAAC,GAAG,cACvBhC,IAAA,UACEM,IAAI,CAAC,MAAM,CACXuG,KAAK,CAAErC,QAAS,CAChB/B,QAAQ,CAAGmC,CAAC,EAAKH,WAAW,CAACG,CAAC,CAACkC,MAAM,CAACD,KAAK,CAAE,CAC7CjF,KAAK,CAAE,CAAE4E,UAAU,CAAE,WAAW,CAAEC,QAAQ,CAAE,EAAE,CAAEO,KAAK,CAAE,GAAI,CAAE,CAC7DJ,WAAW,CAAC,gBAAgB,CAC7B,CAAC,EACG,CAAC,cACR5G,IAAA,WAAQqH,OAAO,CAAE/B,YAAa,CAAC1D,KAAK,CAAE,CAAE0F,UAAU,CAAE,MAAO,CAAE,CAAAtF,QAAA,CAAC,gBAE9D,CAAQ,CAAC,EACN,CAAC,CACLsC,WAAW,eAAItE,IAAA,QAAK4B,KAAK,CAAE,CAAEqF,KAAK,CAAE,OAAO,CAAEC,SAAS,CAAE,KAAM,CAAE,CAAAlF,QAAA,CAAEsC,WAAW,CAAM,CAAC,EACrF,CAAC,CAEH,CAACF,KAAK,eAAIpE,IAAA,QAAK4B,KAAK,CAAE,CAAEqF,KAAK,CAAE,MAAO,CAAE,CAAAjF,QAAA,CAAC,sDAAiD,CAAK,CAChG,EACE,CAAC,CAEV","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}